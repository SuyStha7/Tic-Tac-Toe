{"ast":null,"code":"var _jsxFileName = \"/home/suystha7/Documents/Web Dev/Front-End/React/Tic-Tac-Toe/my-app/src/components/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Board from \"./Board\";\nimport { useState, useEffect } from \"react\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport gameOverSoundAsset from \"../sounds/game_over.wav\";\nimport clickSoundAsset from \"../sounds/click.wav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gameOverSound = new Audio(gameOverSoundAsset);\ngameOverSound.volume = 0.2;\nconst clickSound = new Audio(clickSoundAsset);\nclickSound.volume = 0.5;\nconst Player_X = \"X\";\nconst Player_O = \"O\";\nconst winningCombinations = [\n//Rows\n{\n  combo: [0, 1, 2],\n  strikeClass: \"strike-row-1\"\n}, {\n  combo: [3, 4, 5],\n  strikeClass: \"strike-row-2\"\n}, {\n  combo: [6, 7, 8],\n  strikeClass: \"strike-row-3\"\n},\n//columns\n{\n  combo: [0, 3, 6],\n  strikeClass: \"strike-column-1\"\n}, {\n  combo: [1, 4, 7],\n  strikeClass: \"strike-column-2\"\n}, {\n  combo: [2, 5, 8],\n  strikeClass: \"strike-column-3\"\n},\n//digonals\n{\n  combo: [0, 4, 8],\n  strikeClass: \"strike-diagonal-1\"\n}, {\n  combo: [2, 4, 6],\n  strikeClass: \"strike-diagonal-2\"\n}];\nconst checkWinner = (tiles, setStrikeClass, setGameState) => {\n  for (const {\n    combo,\n    strikeClass\n  } of winningCombinations) {\n    const tileValue1 = tiles[combo[0]];\n    const tileValue2 = tiles[combo[1]];\n    const tileValue3 = tiles[combo[2]];\n    if (tileValue1 !== null && tileValue1 === tileValue2 && tileValue1 === tileValue3) {\n      setStrikeClass(strikeClass);\n      if (tileValue1 === Player_X) {\n        setGameState(GameState.playerXWins);\n      } else {\n        setGameState(GameState.playerOWins);\n      }\n      return;\n    }\n  }\n  const areAllTilesFilledIn = tile => tile !== null;\n  if (areAllTilesFilledIn) {\n    setGameState(GameState.draw);\n  }\n};\nconst TicTacToe = () => {\n  _s();\n  const [tiles, setTiles] = useState(Array(9).fill(null));\n  const [playerTurn, setPlayerTurn] = useState(Player_X);\n  const [strikeClass, setStrikeClass] = useState();\n  const [gameState, setGameState] = useState(GameState.inProgress);\n  const handleReset = () => {\n    setGameState(GameState.inProgress);\n    setTiles(Array(9).fill(null));\n    setPlayerTurn(Player_X);\n    setStrikeClass(null);\n  };\n  useEffect(() => {\n    checkWinner(tiles, setStrikeClass, setGameState);\n  }, [tiles]);\n  useEffect(() => {\n    if (tiles.some(tile => tile !== null)) {\n      clickSound.play();\n    }\n  }, [tiles]);\n  const handleTileClick = index => {\n    if (gameState !== GameState.inProgress) {\n      return;\n    }\n    if (tiles[index] != null) {\n      return;\n    }\n    const newTiles = {\n      ...tiles\n    };\n    newTiles[index] = playerTurn;\n    setTiles(newTiles);\n    if (playerTurn === Player_X) {\n      setPlayerTurn(Player_O);\n    } else {\n      setPlayerTurn(Player_X);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      playerTurn: playerTurn,\n      tiles: tiles,\n      onTileClick: handleTileClick,\n      strikeClass: strikeClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      gameState: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      gameState: gameState,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToe, \"+E51yAXW7n7/Ypl9WX04Gr40JKM=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","Board","useState","useEffect","GameOver","GameState","Reset","gameOverSoundAsset","clickSoundAsset","jsxDEV","_jsxDEV","gameOverSound","Audio","volume","clickSound","Player_X","Player_O","winningCombinations","combo","strikeClass","checkWinner","tiles","setStrikeClass","setGameState","tileValue1","tileValue2","tileValue3","playerXWins","playerOWins","areAllTilesFilledIn","tile","draw","TicTacToe","_s","setTiles","Array","fill","playerTurn","setPlayerTurn","gameState","inProgress","handleReset","some","play","handleTileClick","index","newTiles","children","fileName","_jsxFileName","lineNumber","columnNumber","onTileClick","onReset","_c","$RefreshReg$"],"sources":["/home/suystha7/Documents/Web Dev/Front-End/React/Tic-Tac-Toe/my-app/src/components/TicTacToe.jsx"],"sourcesContent":["import React from \"react\";\nimport Board from \"./Board\";\nimport { useState, useEffect } from \"react\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport gameOverSoundAsset from \"../sounds/game_over.wav\"\nimport clickSoundAsset from \"../sounds/click.wav\"\n\nconst gameOverSound = new Audio(gameOverSoundAsset)\ngameOverSound.volume= 0.2;\nconst clickSound = new Audio(clickSoundAsset)\nclickSound.volume= 0.5;\n\nconst Player_X = \"X\";\nconst Player_O = \"O\";\n\nconst winningCombinations = [\n  //Rows\n  { combo: [0, 1, 2], strikeClass: \"strike-row-1\" },\n  { combo: [3, 4, 5], strikeClass: \"strike-row-2\" },\n  { combo: [6, 7, 8], strikeClass: \"strike-row-3\" },\n\n  //columns\n  { combo: [0, 3, 6], strikeClass: \"strike-column-1\" },\n  { combo: [1, 4, 7], strikeClass: \"strike-column-2\" },\n  { combo: [2, 5, 8], strikeClass: \"strike-column-3\" },\n\n  //digonals\n  { combo: [0, 4, 8], strikeClass: \"strike-diagonal-1\" },\n  { combo: [2, 4, 6], strikeClass: \"strike-diagonal-2\" },\n];\n\nconst checkWinner = (tiles, setStrikeClass, setGameState) => {\n  for (const { combo, strikeClass } of winningCombinations) {\n    const tileValue1 = tiles[combo[0]];\n    const tileValue2 = tiles[combo[1]];\n    const tileValue3 = tiles[combo[2]];\n\n    if (\n      tileValue1 !== null &&\n      tileValue1 === tileValue2 &&\n      tileValue1 === tileValue3\n    ) {\n      setStrikeClass(strikeClass);\n      if (tileValue1 === Player_X) {\n        setGameState(GameState.playerXWins);\n      } else {\n        setGameState(GameState.playerOWins);\n      }\n      return;\n    }\n  }\n\n  const areAllTilesFilledIn = ((tile) => tile !== null);\n  if (areAllTilesFilledIn) {\n    setGameState(GameState.draw);\n  }\n};\n\nconst TicTacToe = () => {\n  const [tiles, setTiles] = useState(Array(9).fill(null));\n  const [playerTurn, setPlayerTurn] = useState(Player_X);\n  const [strikeClass, setStrikeClass] = useState();\n  const [gameState, setGameState] = useState(GameState.inProgress);\n\n  const handleReset = () => {\n    setGameState(GameState.inProgress)\n    setTiles(Array(9).fill(null));\n    setPlayerTurn(Player_X);\n    setStrikeClass(null);\n  };\n\n  useEffect(() => {\n    checkWinner(tiles, setStrikeClass, setGameState);\n  }, [tiles]);\n\n  useEffect(() => {\n    if(tiles.some((tile)=> tile !== null)){\n        clickSound.play();\n    }\n  }, [tiles]);\n\n  const handleTileClick = (index) => {\n    if (gameState !== GameState.inProgress) {\n      return;\n    }\n\n    if (tiles[index] != null) {\n      return;\n    }\n    const newTiles = { ...tiles };\n    newTiles[index] = playerTurn;\n    setTiles(newTiles);\n    if (playerTurn === Player_X) {\n      setPlayerTurn(Player_O);\n    } else {\n      setPlayerTurn(Player_X);\n    }\n  };\n  return (\n    <div>\n      <h1>Tic Tac Toe</h1>\n      <Board\n        playerTurn={playerTurn}\n        tiles={tiles}\n        onTileClick={handleTileClick}\n        strikeClass={strikeClass}\n      />\n      <GameOver gameState={gameState} />\n      <Reset gameState={gameState}  onReset={handleReset}/>\n    </div>\n  );\n};\n\nexport default TicTacToe;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}